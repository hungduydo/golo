{"version":3,"sources":["screens/Invest/range/index.js","screens/Invest/InvestTable/index.js","screens/Invest/index.js"],"names":["StockRange","props","className","start","end","InvestTable","title","data","columns","React","useEffect","tempData","rows","settableData","useState","tableData","paging","buyColumes","label","field","historyColumes","Invest","code","setCode","buy","setbuy","history","sethistory","Promise","all","api","post","then","buyRes","historyRes","buyData","map","it","index","at_id","at_ticker","at_date","price_now","profit","id","price","roundPrice","date","Date","toLocaleDateString","histData","ath_id","ath_com_code","ath_date_buy","ath_date_sell","ath_date_invest","ath_price_buy","ath_invest_type","ath_price_sell","ath_profit","buy_date","buy_price","sell_date","sell_price","finally","name","short_name","point","getTime","change","percent","current","year_percent","priceString","toFixed","activeTab","setActiveTab","toggle","tab","Container","Row","Nav","tabs","NavItem","classnames","active","onClick","TabContent","TabPane","tabId","Col","sm"],"mappings":"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","file":"static/js/8.6b78ae01.chunk.js","sourcesContent":["import React from 'react';\nimport { Hint, HorizontalGridLines, LineSeries, VerticalGridLines, XAxis, XYPlot, YAxis } from \"react-vis\";\nimport './range.scss';\nconst StockRange = (props) => {\n  return (\n    <div className=\"code-range\">\n      <span>{props.start}</span>\n      <div className=\"range-bar\">\n        <span className=\"caret\">Today</span>\n        <p>52 Week Range</p>\n      </div>\n      <span>{props.end}</span>\n     \n    </div>\n  )\n}\n\nexport default StockRange;","import React, { useState } from 'react';\nimport './invest-table.scss';\nimport { MDBDataTable } from 'mdbreact';\n\nconst InvestTable = ({title, data, columns}) => {\n  React.useEffect(() => {\n    tempData.rows = data;\n    settableData(tempData)\n  }, [data]);\n  const [tableData, settableData] = useState({})\n  const tempData = {\n    columns: columns,\n    rows: []\n  };\n  // settableData(tempData)\n  return (\n    <div className=\"invest-table\">\n      <p className=\"title\">{title}</p>\n      <MDBDataTable\n        paging={false}\n        data={tableData}\n      />\n    </div>)\n}\n\nexport default InvestTable;","import React, { useEffect, useState } from \"react\";\nimport Moment from 'react-moment';\nimport { Button, Card, CardText, CardTitle, Col, Container, Nav, Navbar, NavItem, NavLink, Row, TabContent, TabPane } from \"reactstrap\";\nimport api from \"../../service/api\";\nimport StockRange from \"./range\";\nimport classnames from 'classnames';\nimport InvestTable from \"./InvestTable\";\n\nconst buyColumes = [\n  {\n    label: '#',\n    field: 'index'\n  },\n  {\n    label: 'Mã CTy',\n    field: 'code'\n  },\n  {\n    label: 'Ngày mua',\n    field: 'date'\n  },\n  {\n    label: 'Giá mua',\n    field: 'price'\n  },\n  {\n    label: 'Lời / lỗ hiện tại',\n    field: 'profit'\n  }\n]\n\nconst historyColumes = [\n  {\n    label: '#',\n    field: 'index'\n  },\n  {\n    label: 'Mã CTy',\n    field: 'code'\n  },\n  {\n    label: 'Ngày mua',\n    field: 'buy_date'\n  },\n  {\n    label: 'Giá mua',\n    field: 'buy_price'\n  },\n  {\n    label: 'Ngày bán',\n    field: 'sell_date'\n  },\n  {\n    label: 'Giá bán',\n    field: 'sell_price'\n  },\n  {\n    label: 'Lời / lỗ hiện tại',\n    field: 'profit'\n  }\n]\n\nconst Invest = () => {\n  // let data = {};\n  // let current, close, mothago, weekago = {};\n  const [code, setCode] = useState({});\n  const [buy, setbuy] = useState([])\n  const [history, sethistory] = useState([])\n  let count = 0;\n  useEffect(() => {\n    // Update the document title using the browser API\n    Promise.all([\n      api.post('investBuy', { \"batdau\": 0, \"soluong\": \"10\" }),\n      api.post('investHistory', { \"batdau\": 0, \"soluong\": \"10\" })\n    ])\n      .then(([buyRes, historyRes, compValueRes]) => {\n\n        if (buyRes && buyRes.data) {\n          const buyData = buyRes.data.data.map((it, index) => {\n            const { at_id, at_ticker, at_date, price_now, profit } = it;\n            const row = {\n              index: index + 1,\n              id: at_id,\n              code: at_ticker,\n              price: roundPrice(price_now),\n              profit: roundPrice(profit),\n              date: new Date(at_date).toLocaleDateString()\n            }\n\n            return row;\n          });\n          setbuy(buyData);\n        }\n\n        if (historyRes && historyRes.data) {\n          const histData = historyRes.data.data.map((it, index) => {\n            const { ath_id, ath_com_code, ath_date_buy, ath_date_invest, ath_date_sell, ath_invest_type, ath_price_buy, ath_price_sell, ath_profit } = it;\n\n            const row = {\n              index: index + 1,\n              id: ath_id,\n              code: ath_com_code,\n              buy_date: new Date(ath_date_buy).toLocaleDateString(),\n              buy_price: roundPrice(ath_price_buy),\n              sell_date: new Date(ath_date_sell).toLocaleDateString(),\n              sell_price: roundPrice(ath_price_sell),\n              profit: roundPrice(ath_profit)\n            }\n\n            return row;\n          });\n          sethistory(histData);\n        }\n      }).finally(() => {\n        setCode({\n          name: 'APPLE INC',\n          short_name: 'AAPL',\n          point: \"373.81\",\n          date: new Date().getTime(),\n          change: \"9.70\",\n          percent: \"+2.66%\",\n          start: 192.58,\n          end: 275.78,\n          current: 330.43,\n          year_percent: 27.30\n        })\n      });\n  }, [count]);\n  const roundPrice = (priceString) => {\n    return (priceString * 1).toFixed(2) * 1\n  }\n  const [activeTab, setActiveTab] = useState('1');\n\n  const toggle = tab => {\n    if (activeTab !== tab) setActiveTab(tab);\n  }\n\n  return <Container className=\"invest\">\n    <Row className=\"code-info my-5\">\n      <p className=\"border-bottom pb-4 mb-4\">\n        <span className=\"code-name\"><b>{code.name}</b> (NASDQA: {code.short_name})</span>\n      </p>\n      <p className=\"code-tab\">\n        <span className=\"code-point\"><b>{code.point}</b> (Delayed Data As of {code.date})</span>\n        <span className=\"code-change\"><b>{code.change} / {code.percent}</b> Today's Change</span>\n        <StockRange start={190} end={230} current={200}></StockRange>\n        <span className=\"code-change\"><b>+27.30%</b>Year to Date</span>\n      </p>\n      <p>\n\n      </p>\n    </Row>\n\n    <Row className=\"chart\">\n      <Nav tabs className=\"invest-tab\">\n        <NavItem\n          className={classnames({ active: activeTab === '1' })}\n          onClick={() => { toggle('1'); }}>\n          Mua\n        </NavItem>\n        <NavItem\n          className={classnames({ active: activeTab === '2' })}\n          onClick={() => { toggle('2'); }}>\n          Lịch sử khuyến nghị\n        </NavItem>\n        <NavItem\n          className={classnames({ active: activeTab === '3' })}\n          onClick={() => { toggle('3'); }}>\n          Hiệu quả mô hình\n        </NavItem>\n      </Nav>\n      <TabContent activeTab={activeTab} className=\"w-100\">\n        <TabPane tabId=\"1\">\n          <Row>\n            <Col sm=\"12\" className=\"mt-5\">\n              <InvestTable\n                columns={buyColumes}\n                data={buy}\n                title=\"Danh Sách Cổ Phiếu Cho Tín Hiệu Mua\"></InvestTable>\n            </Col>\n          </Row>\n        </TabPane>\n        <TabPane tabId=\"2\">\n          <Row>\n            <Col sm=\"12\">\n              <InvestTable\n                title=\"Danh Sách Cổ Phiếu Đã Khuyến Nghị\"\n                columns={historyColumes}\n                data={history}></InvestTable>\n            </Col>\n          </Row>\n        </TabPane>\n      </TabContent>\n    </Row>\n\n    <Row className=\"chart\">\n\n    </Row>\n    <Row className=\"chart\">\n\n    </Row>\n  </Container>\n};\n\nexport default Invest;\n"],"sourceRoot":""}